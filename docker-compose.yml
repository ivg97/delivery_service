version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - redis
      - mysql
    env_file:
      - .env
    environment:
      - DATABASE_URL=mysql+aiomysql://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0

  mysql:
    image: mysql:8.0
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASS}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  mysql_data:
  redis_data:

#version: '3.8'
#services:
#  mysql:
#    image: mysql:8.0
#    container_name: mysql_db
#    environment:
#      MYSQL_ROOT_PASSWORD: rootpass
#      MYSQL_DATABASE: mydb
#      MYSQL_USER: myuser
#      MYSQL_PASSWORD: userpass
#    ports:
#      - "3306:3306"
#    volumes:
#      - mysql_data:/var/lib/mysql
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#
#volumes:
#  mysql_data: